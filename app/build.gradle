/*
 * Copyright 2017 Martin Chamarro (@martinchamarro)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        applicationId "com.martinchamarro.muvis"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            // Default config
        }
        release {
            // Default config
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-debug-build' + getDate()
            debuggable true
            buildConfigField "boolean", "DEBUG_MODE", "true"
            buildConfigField "String", "API_KEY", '"3202eb5aa836427005ced3a158c19d0b"'
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable false
            buildConfigField "boolean", "DEBUG_MODE", "false"
            buildConfigField "String", "API_KEY", '"<<API_KEY>>"'
            zipAlignEnabled true
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    compile rootProject.ext.dependencies.support
    compile rootProject.ext.dependencies.design
    compile rootProject.ext.dependencies.gson
    compile rootProject.ext.dependencies.dagger
    annotationProcessor rootProject.ext.dependencies.daggerCompiler
    provided rootProject.ext.dependencies.autoValue
    annotationProcessor rootProject.ext.dependencies.autoValue
    compile rootProject.ext.dependencies.butterKnife
    annotationProcessor rootProject.ext.dependencies.butterKnifeCompiler
    compile rootProject.ext.dependencies.retrolambda
    compile rootProject.ext.dependencies.retrofit
    compile rootProject.ext.dependencies.retrofitGson
    compile rootProject.ext.dependencies.okhttp3Logging

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
}

def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmmss')
    return formattedDate
}

apply plugin: 'me.tatarka.retrolambda'
